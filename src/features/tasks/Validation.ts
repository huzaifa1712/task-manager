// Validation logic related to tasks (forms)
// use custom logic instead of yup because it is easier
import { format } from 'date-fns';

// this format is generated by default date picker from bootstrap/normal form-control
const DATE_PICKER_FORMAT = "yyyy-MM-dd";

// if chosen date is earlier than current date, error
    // compare by converting to date only string as indicated by format for BOTH, otherwise
    // new Date() on its own will have inconsistent associated time
const isInvalidDate = (dateStr:string) => {
    const inputFormat = format(new Date(dateStr), DATE_PICKER_FORMAT);
    const nowFormat = format(new Date(), DATE_PICKER_FORMAT);
    // console.log("Input: ", inputFormat);
    // console.log("new Date: ", nowFormat);
    // console.log("boolcompare:", inputFormat < nowFormat);
    return new Date(inputFormat).getTime() < new Date(nowFormat).getTime();
    // console.log("date compare", bool);
}

export type TaskValidationProps = {title:string, description:string, date: string}
export const validateTaskFields = (values:TaskValidationProps ) => {
    // return errors object
    let errors:{title?:string, desc?:string, date?: string} = {} 

    if (!values.title) {
        errors.title = "Title can't be blank";
    } 
    // validation for time:
        // date and time: make sure generated date is AFTER now date
        // date, no time: set time to 12am, display msg? (valid)
        // no date, time: invalid, ask for a date to be provided
        // no date, no time: valid, send as is (API sets to null automatically)

    if (values.date && isInvalidDate(values.date)) {
        errors.date = "Can't use a date before today";
    }

    return errors;
}

export {}